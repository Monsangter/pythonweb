프론트엔드 

프론트엔드에서는 바로 데이터에 접속할 수 없다. 모두 사용자에 노출될 수 있기 때문.

따라서

백엔드 활용


백엔드는 비지니스 로직 처리와, 백엔드와 데이터베이스간 연결고리역할을 한다.

-orm이란?



객체관계매핑

파이썬 객체와 관계형 이비연결 

스퀠 쿼리를 자동으로 생성함 

데이터베이스 안 데이터가 파이썬 오브젝트로 바로 매핑된다.

테이블이나 스키마 핸들링은 객체통해서하는거.

장고 orm은 비동기를 제공하지 않기때문에 잘 사용안하는 추세ㅔ. 에스큐엘 알케미 주로 씀.


직관적이며
에스큐엘보다 비지니스 로직에 더 집중할 수 있다.
가독성이 올라가며
종속성이 줄어들고
(만약 에스큐엘로 짯으면 디비를 바꿀때마다 쿼리 바꿔줘야함)
sql인젝션을 막아준다.

단점

로우쿼리가 필요한 구간이 반드시 있으며
프로젝트 복잡도가 올라갈시 오알엠 난이도도 올라간다.
프로시저 사용이 수월하지가 않다.


====
-장고 어드민


=====
-장고 폼
단순 정보 전달성 페이지를 만드는 것이 아니라면 유저의 입력을 받아야 한다.
이것을 폼이라고 한다.


